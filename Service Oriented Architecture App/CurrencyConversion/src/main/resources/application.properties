spring.application.name=currency-conversion
server.port = 8100

eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

management.endpoints.web.exposure.include=chaosmonkey,circuitbreakers

#Chaos monkey konfiguracija
spring.profiles.active=chaos-monkey
chaos.monkey.enabled=true
management.endpoint.chaosmonkey.enabled=true
chaos.monkey.watcher.rest-controller=true

#Level predstavlja ucestalost napada, 1 predstavlja napada u svakom pozivu, 5 predstavlja napad u
#svakom petom pozivu
chaos.monkey.assaults.level=1
#Ukoliko je deterministic = true onda se uzima bukvalna vrednost levela, ukoliko je false onda level
#predstavlja sansu
# napada izrazenu u promilima, u trenutnoj konfiguraciji to bi bilo jednom u hiljadu
chaos.monkey.assaults.deterministic=true

#Napadi latentnosti, konfiguracije za najmanju i najvecu mogucu latentnost izrazene u milisekundama
chaos.monkey.assaults.latency-active=false
chaos.monkey.assaults.latency-range-start=5000
chaos.monkey.assaults.latency-range-end=8000

#Konfiguracija putem koje se napadi predstavljaju kao pojava izuzetka u radu aplikacije
chaos.monkey.assaults.exceptions-active=false

#Konfiguracija putem koje je moguce tempirati trenutak gasenja aplikacije
chaos.monkey.assaults.kill-application-active=false
chaos.monkey.assaults.kill-application-cron-expression=30 * * ? * *

## CircuitBreaker
#Minimalni broj zahteva potreban za racunanje praga uspesnosti
resilience4j.circuitbreaker.instances.cb.minimum-number-of-calls=1
#Ako je 50% zahteva neuspesno (ili sporo) CB prelazi u OPEN stanje
resilience4j.circuitbreaker.instances.cb.failure-rate-threshold=50
#Duzina trajanja OPEN stanja
resilience4j.circuitbreaker.instances.cb.wait-duration-in-open-state=20s
#Broj dozvoljenih zahteva u poluotvorenom stanju
resilience4j.circuitbreaker.instances.cb.permitted-number-of-calls-in-half-open-state=4
#Neograniceno vreme trajanja HALF-OPEN stanja
resilience4j.circuitbreaker.instances.cb.max-wait-duration-in-half-open-state=0
#Konfiguracija zahteva koje ce CB klasifikovati kao "spore(latentne) zahteva"
resilience4j.circuitbreaker.instances.cb.slow-call-duration-threshold=5s
resilience4j.circuitbreaker.instances.cb.slow-call-rate-threshold=50

#Konfiguracija RETRY mehanizma
#Vreme cekanja izmedju ponovnih zahteva
resilience4j.retry.instances.default.wait-duration=20s
#Broj zahteva koje primenjuje retry mehanizam
resilience4j.retry.instances.default.max-attempts=3